# JMH version: 1.33
# VM version: JDK 17, OpenJDK 64-Bit Server VM, 17+35-LTS
# VM invoker: /home/leferreira/.jdks/corretto-17/bin/java
# VM options: -javaagent:/home/leferreira/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/213.7172.25/lib/idea_rt.jar=36429:/home/leferreira/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/213.7172.25/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 10 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: br.com.leonardoferreira.poc.Slf4jBenchmark.systemout

# Run progress: 0,00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 158004,160 ops/s
Iteration   1: 153716,053 ops/s
Iteration   2: 153773,413 ops/s
Iteration   3: 141094,789 ops/s
Iteration   4: 145518,050 ops/s
Iteration   5: 146768,867 ops/s


Result "br.com.leonardoferreira.poc.Slf4jBenchmark.systemout":
  148174,234 ±(99.9%) 21197,040 ops/s [Average]
  (min, avg, max) = (141094,789, 148174,234, 153773,413), stdev = 5504,804
  CI (99.9%): [126977,194, 169371,274] (assumes normal distribution)


# Run complete. Total time: 00:00:25

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                  Mode  Cnt       Score       Error  Units
Slf4jBenchmark.systemout  thrpt    5  148174,234 ± 21197,040  ops/s
