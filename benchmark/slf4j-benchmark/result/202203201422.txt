# JMH version: 1.33
# VM version: JDK 17, OpenJDK 64-Bit Server VM, 17+35-LTS
# VM invoker: /home/leferreira/.jdks/corretto-17/bin/java
# VM options: -javaagent:/home/leferreira/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/213.7172.25/lib/idea_rt.jar=33965:/home/leferreira/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/213.7172.25/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 10 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: br.com.leonardoferreira.poc.Slf4jBenchmark.slf4jConsoleAppender

# Run progress: 0,00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 174810,298 ops/s
Iteration   1: 179935,975 ops/s
Iteration   2: 173729,802 ops/s
Iteration   3: 178039,572 ops/s
Iteration   4: 176644,239 ops/s
Iteration   5: 174051,771 ops/s


Result "br.com.leonardoferreira.poc.Slf4jBenchmark.slf4jConsoleAppender":
  176480,272 ±(99.9%) 10162,871 ops/s [Average]
  (min, avg, max) = (173729,802, 176480,272, 179935,975), stdev = 2639,265
  CI (99.9%): [166317,401, 186643,143] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 17, OpenJDK 64-Bit Server VM, 17+35-LTS
# VM invoker: /home/leferreira/.jdks/corretto-17/bin/java
# VM options: -javaagent:/home/leferreira/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/213.7172.25/lib/idea_rt.jar=33965:/home/leferreira/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/213.7172.25/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 5 iterations, 3 s each
# Timeout: 10 min per iteration
# Threads: 10 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: br.com.leonardoferreira.poc.Slf4jBenchmark.systemout

# Run progress: 50,00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 145545,399 ops/s
Iteration   1: 139103,760 ops/s
Iteration   2: 143165,019 ops/s
Iteration   3: 136851,281 ops/s
Iteration   4: 136421,084 ops/s
Iteration   5: 140197,159 ops/s


Result "br.com.leonardoferreira.poc.Slf4jBenchmark.systemout":
  139147,661 ±(99.9%) 10536,653 ops/s [Average]
  (min, avg, max) = (136421,084, 139147,661, 143165,019), stdev = 2736,335
  CI (99.9%): [128611,008, 149684,314] (assumes normal distribution)


# Run complete. Total time: 00:00:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt       Score       Error  Units
Slf4jBenchmark.slf4jConsoleAppender  thrpt    5  176480,272 ± 10162,871  ops/s
Slf4jBenchmark.systemout             thrpt    5  139147,661 ± 10536,653  ops/s
